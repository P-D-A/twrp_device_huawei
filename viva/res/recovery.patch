
project bootable/recovery/
diff --git a/bootable/recovery/exfat/libexfat/io.c b/bootable/recovery/exfat/libexfat/io.c
index 3c3bd27..19224fa 100644
--- a/bootable/recovery/exfat/libexfat/io.c
+++ b/bootable/recovery/exfat/libexfat/io.c
@@ -210,7 +210,7 @@ struct exfat_dev* exfat_open(const char* spec, enum exfat_mode mode)
 		{
 			close(dev->fd);
 			free(dev);
-			exfat_error("failed to get size of '%s'", spec);
+			exfat_error("failed to get size of '%s': 0x%" PRIx64, spec, dev->size);
 			return NULL;
 		}
 		if (exfat_seek(dev, 0, SEEK_SET) == -1)
@@ -298,7 +298,7 @@ loff_t exfat_seek(struct exfat_dev* dev, loff_t offset, int whence)
 	/* XXX SEEK_CUR will be handled incorrectly */
 	return dev->pos = lseek(dev->fd, offset, whence);
 #else
-	return lseek(dev->fd, offset, whence);
+	return lseek64(dev->fd, offset, whence);
 #endif
 }
 
@@ -332,7 +332,7 @@ ssize_t exfat_pread(struct exfat_dev* dev, void* buffer, size_t size,
 #ifdef USE_UBLIO
 	return ublio_pread(dev->ufh, buffer, size, offset);
 #else
-	return pread(dev->fd, buffer, size, offset);
+	return pread64(dev->fd, buffer, size, offset);
 #endif
 }
 
@@ -342,7 +342,7 @@ ssize_t exfat_pwrite(struct exfat_dev* dev, const void* buffer, size_t size,
 #ifdef USE_UBLIO
 	return ublio_pwrite(dev->ufh, buffer, size, offset);
 #else
-	return pwrite(dev->fd, buffer, size, offset);
+	return pwrite64(dev->fd, buffer, size, offset);
 #endif
 }
 
diff --git a/bootable/recovery/gui/action.cpp b/bootable/recovery/gui/action.cpp
index 656c687..fabbd53 100644
--- a/bootable/recovery/gui/action.cpp
+++ b/bootable/recovery/gui/action.cpp
@@ -1154,7 +1154,7 @@ int GUIAction::nandroid(std::string arg)
 			DataManager::GetValue(TW_BACKUP_NAME, Backup_Name);
 			string auto_gen = gui_lookup("auto_gen", "(Auto Generate)");
 			string curr_date = gui_lookup("curr_date", "(Current Date)");
-			if (Backup_Name == "(Auto Generate)" || Backup_Name == "(Current Date)" || Backup_Name == "0" || Backup_Name == "(" || PartitionManager.Check_Backup_Name(true) == 0) {
+			if (Backup_Name == auto_gen || Backup_Name == curr_date || Backup_Name == "0" || Backup_Name == "(" || PartitionManager.Check_Backup_Name(true) == 0) {
 				ret = PartitionManager.Run_Backup();
 			}
 			else {
diff --git a/bootable/recovery/gui/pages.cpp b/bootable/recovery/gui/pages.cpp
index bd7c799..4d5c6ec 100644
--- a/bootable/recovery/gui/pages.cpp
+++ b/bootable/recovery/gui/pages.cpp
@@ -1341,6 +1341,7 @@ int PageManager::LoadPackage(std::string name, std::string package, std::string
 	mReloadTheme = false;
 	mStartPage = startpage;
 
+	DataManager::ReadSettingsFile();
 	// Open the XML file
 	LOGINFO("Loading package: %s (%s)\n", name.c_str(), package.c_str());
 	if (package.size() > 4 && package.substr(package.size() - 4) != ".zip")
@@ -1349,7 +1350,8 @@ int PageManager::LoadPackage(std::string name, std::string package, std::string
 		tw_x_offset = TW_X_OFFSET;
 		tw_y_offset = TW_Y_OFFSET;
 		LoadLanguageList(NULL);
-		languageFile = LoadFileToBuffer(TWRES "languages/en.xml", NULL);
+		LOGINFO("CURR LANG: %s\n", DataManager::GetStrValue("tw_language").c_str());
+		languageFile = LoadFileToBuffer(TWRES "languages/" + DataManager::GetStrValue("tw_language") + ".xml", NULL);
 	}
 	else
 	{
@@ -1370,7 +1372,7 @@ int PageManager::LoadPackage(std::string name, std::string package, std::string
 		pZip = &zip;
 		package = "ui.xml";
 		LoadLanguageList(pZip);
-		languageFile = LoadFileToBuffer("languages/en.xml", pZip);
+		languageFile = LoadFileToBuffer("languages/" + DataManager::GetStrValue("tw_language") + ".xml", pZip);
 	}
 
 	xmlFile = LoadFileToBuffer(package, pZip);
@@ -1522,7 +1524,7 @@ int PageManager::RunReload() {
 		}
 	}
 	if (ret_val == 0) {
-		if (DataManager::GetStrValue("tw_language") != "en.xml") {
+		if (DataManager::GetStrValue("tw_language") != "en") {
 			LOGINFO("Loading language '%s'\n", DataManager::GetStrValue("tw_language").c_str());
 			LoadLanguage(DataManager::GetStrValue("tw_language"));
 		}
diff --git a/bootable/recovery/gui/theme/common/landscape.xml b/bootable/recovery/gui/theme/common/landscape.xml
index 19cc657..0e540c4 100755
--- a/bootable/recovery/gui/theme/common/landscape.xml
+++ b/bootable/recovery/gui/theme/common/landscape.xml
@@ -188,6 +188,7 @@
 				<actions>
 					<action function="set">tw_clear_destination=main2</action>
 					<action function="page">clear_vars</action>
+					<action function="set">tw_backup_name={@auto_generate=(Auto Generate)}</action>
 				</actions>
 			</action>
 		</page>
diff --git a/bootable/recovery/gui/theme/common/portrait.xml b/bootable/recovery/gui/theme/common/portrait.xml
index b1ab160..2318b6a 100755
--- a/bootable/recovery/gui/theme/common/portrait.xml
+++ b/bootable/recovery/gui/theme/common/portrait.xml
@@ -153,6 +153,7 @@
 				<actions>
 					<action function="set">tw_clear_destination=main2</action>
 					<action function="page">clear_vars</action>
+					<action function="set">tw_backup_name={@auto_generate=(Auto Generate)}</action>
 				</actions>
 			</action>
 		</page>
diff --git a/bootable/recovery/gui/theme/common/watch.xml b/bootable/recovery/gui/theme/common/watch.xml
index 3d68f44..a71baa1 100755
--- a/bootable/recovery/gui/theme/common/watch.xml
+++ b/bootable/recovery/gui/theme/common/watch.xml
@@ -183,6 +183,7 @@
 				<actions>
 					<action function="set">tw_clear_destination=main2</action>
 					<action function="page">clear_vars</action>
+					<action function="set">tw_backup_name={@auto_generate=(Auto Generate)}</action>
 				</actions>
 			</action>
 		</page>
